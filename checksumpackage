#!/bin/bash
# checksumpackage
# make checksum.md5 via md5deep for package
# version 1.1 adds use of dfxml
version=1.1

scriptdir=$(dirname "${0}")
. "${scriptdir}/mmfunctions" || { echo "Missing '${scriptdir}/mmfunctions'. Exiting." ; exit 1 ;};
unset dependencies
dependencies=(md5deep xml "${scriptdir}/removeDSStore")

usage(){
    echo
    echo "$(basename ${0}) ${version}"
    echo "This application will create a checksum from a directory or package input with the following options."
    echo "Dependencies: ${dependencies[@]}"
    echo "Usage: $(basename ${0}) directoryorpackage1 [ directoryorpackage2 ...]"
    echo
    exit
}
[ "${#}" = 0 ] && usage
check_dependencies "${dependencies[@]}"

cleanup(){
    _log -a "Process aborted"
    exit 1
}

trap cleanup SIGHUP SIGINT SIGTERM

# local variables
CHECKSUMNAME="checksum.md5"
DFXMLNAME="dfxml.xml"

while [ "${*}" != "" ] ; do
    _log -b
    if [ -d "${1}" ] ; then
        PWD=$(pwd)
        "${scriptdir}/removeDSStore" "$1"
        if [ -d "${1}/objects" ] ; then
            INDIR="objects"
            OUTDIR="metadata"
        else
            INDIR="."
            OUTDIR="."
        fi
        [ ! -d "${1}/${OUTDIR}" ] && mkdir -p "${1}/${OUTDIR}"
        if [ -s "${1}/${OUTDIR}/${CHECKSUMNAME}" ] ; then
            if [[ -n $(find "$1/$INDIR" -newer "${1}/${OUTDIR}/${CHECKSUMNAME}" -type f ! -name ".DS_Store") ]] ; then
                report -wdt "Found new files since last checksum. Including:"
                find "$1/$INDIR" -newer "${1}/${OUTDIR}/${CHECKSUMNAME}" -type f ! -name ".DS_Store"
                report -wdt "Creating a new version of the checksum files."
                mv -v "${1}/${OUTDIR}/${CHECKSUMNAME}" "${1}/${OUTDIR}/${CHECKSUMNAME%.*}_$(stat -t '%Y%m%d-%H%M%S' -l "${1}/${OUTDIR}/${CHECKSUMNAME}" | awk '{print $6}').md5"
                mv -v "${1}/${OUTDIR}/${DFXMLNAME}" "${1}/${OUTDIR}/${DFXMLNAME%.*}_$(stat -t '%Y%m%d-%H%M%S' -l "${1}/${OUTDIR}/${DFXMLNAME}" | awk '{print $6}').xml"
            else
                report -dt "${CHECKSUMNAME} already exists, skipping for ${1}"
                shift
                continue
            fi
        fi
        report -dt "making Digital Forensics XML (${DFXMLNAME}) and (${CHECKSUMNAME}) for ${1}"
        cd "$1/$INDIR"
        DFXMLTMP=$(maketemp)
        md5deep -drl . > $DFXMLTMP
        mv "${DFXMLTMP}" "${1}/${OUTDIR}/${DFXMLNAME}"
        xml sel -T -t -m "/_:dfxml/_:fileobject" -v "_:hashdigest" -o "  " -v "_:filename" -n "${1}/${OUTDIR}/${DFXMLNAME}" > "${1}/${OUTDIR}/${CHECKSUMNAME}"
        cd "${PWD}"
        if [ "$FILEMAKER_XML_URL" ] ; then
            "${scriptdir}/checksum2filemaker" "${1}"
        fi
    else
    report -dt "ERROR: ${0} requires directories as input and $1 is not a directory."
    fi
    _log -e
    shift
done
