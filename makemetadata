#!/bin/bash
# make metadata
VERSION="0.2"
SCRIPTDIR=$(dirname $(which "${0}"))
. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ;};
DEPENDENCIES=(ffprobe mediainfo exiftool)
_initialize_make

_usage(){
    echo
    echo "$(basename "${0}") ${VERSION}"
    echo "Produces a set of metadata reports for an archival information package on all files in the objects subdirectory."
    echo "Usage: $(basename "${0}") [ -h ] package1 [ package2 ... ]"
    echo "  -h (show _usage)"
    exit
}
[ "${#}" = 0 ] && _usage

# command-line options to set mediaid and original variables
OPTIND=1
while getopts ":h" OPT ; do
    case "${OPT}" in
        h) _usage ;;
        *) echo "bad option -${OPTARG}" ; _usage ;;
        :) echo "Option -${OPTARG} requires an argument" ; _writeerrorlog "makemetadata" "The option selected required an argument and none was provided. The script had to exit." ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

_log -b
OUTPUTDIR="./metadata/submissionDocumentation/fileMeta"

while [ "${*}" != "" ] ; do
    PACKAGE_PATH="${1}"
    PWD=$(pwd)
    cd "${PACKAGE_PATH}"
    FILELIST=$(_maketemp)
    find "./objects" -type f ! -name ".*" ! -path "*/access/images/*" > "${FILELIST}"
    _report -dt "Making metadata reports for ${PACKAGE_PATH}."
    while read FILE ; do
        FILENAMEROOT=$(basename "${FILE}")
        PARENTDIR=$(dirname "${FILE}")
        FILEOUTPUT="${OUTPUTDIR}/${PARENTDIR}"
        if [ ! -d "${FILEOUTPUT}" ] ; then
            _run mkdir -p "${FILEOUTPUT}"
        fi
        FFPROBEXML="${FILEOUTPUT}/${FILENAMEROOT%.*}_ffprobe.xml"
        FFPROBEJSON="${FILEOUTPUT}/${FILENAMEROOT%.*}_ffprobe.json"
        MEDIAINFOXML="${FILEOUTPUT}/${FILENAMEROOT}_mediainfo.xml"
        MEDIAINFOTRACE="${FILEOUTPUT}/${FILENAMEROOT}_mediatrace.xml"
        EXIFTOOLXML="${FILEOUTPUT}/${FILENAMEROOT%.*}_exiftool.xml"
        EXIFTOOLTXT="${FILEOUTPUT}/${FILENAMEROOT%.*}_exiftool.txt"
        ffprobe 2> /dev/null "${FILE}" -show_format -show_streams -show_data -show_error -show_versions -show_chapters -noprivate -of xml="q=1:x=1" > "${FFPROBEXML}"
        ffprobe 2> /dev/null "${FILE}" -show_format -show_streams -show_data -show_error -show_versions -show_chapters -of json > "${FFPROBEJSON}"
        mediaconch -mi -fx "${FILE}" | xml fo > "${MEDIAINFOXML}"
        mediaconch -mi -mt -fx "${FILE}" | xml fo > "${MEDIAINFOTRACE}"
        exiftool -X "${FILE}" > "${EXIFTOOLXML}"
        exiftool "${FILE}" > "${EXIFTOOLTXT}"
    done < "${FILELIST}"

    cd "${PWD}"
    _run rm -r -f "${FILELIST}"
    shift
    _log -e
done
