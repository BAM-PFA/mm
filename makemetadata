#!/bin/bash
# make metadata
version="0.2"
scriptdir=$(dirname $(which "$0"))
. "$scriptdir/mmfunctions" || { echo "Missing '$scriptdir/mmfunctions'. Exiting." ; exit 1 ;};

cleanup(){
    log -a "Process aborted"
    exit 1
}

trap cleanup SIGHUP SIGINT SIGTERM

usage(){
    echo
    echo "$(basename $0) ${version}"
    echo "This script may be run interactively by running it with no arguments or may be used with the following options."
    echo "Usage: $(basename $0) [ -m mediaid ]"
    echo "  -m mediaid"
    exit
}

# command-line options to set mediaid and original variables
OPTIND=1
while getopts ":hm:" opt; do
    case "$opt" in
        h) usage ;;
        m) mediaid="$OPTARG" ;;
        \?) echo "Invalid option: -$OPTARG" ; exit 1 ;;
        :) echo "Option -$OPTARG requires an argument" ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

log -b
outputdir="./metadata/submissionDocumentation/fileMeta"
mkdir -p "$outputdir"

while [ "$*" != "" ] ; do
    uuid=$(uuidgen)
    package_path="$1"
    mediaid=$(basename "$package_path" | cut -d. -f1)
    pwd=$(pwd)
    cd "$package_path"
    FILELIST=$(maketemp)
    find "./objects" -type f ! -name ".*" > "$FILELIST"
    if [ -d ./objects/service ] ; then
        service_file=$(find "./objects/service" -maxdepth 1 -mindepth 1 -type f ! -name ".*")
        servicebasename=$(basename "$service_file")
    fi

    echo "STATUS Making metadata reports for ${mediaid}."
    while read file ; do
        filenameroot=$(basename "$file")
        parentdir=$(dirname "$file")
        fileoutput="$outputdir/$parentdir"
        mkdir -p "$fileoutput"
        ffprobe 2> /dev/null "$file" -show_format -show_streams -show_data -show_error -show_versions -show_chapters -noprivate -of xml="q=1:x=1" > "$fileoutput/${filenameroot%.*}_ffprobe.xml"
        ffprobe 2> /dev/null "$file" -show_format -show_streams -show_data -show_error -show_versions -show_chapters -of json > "$fileoutput/${filenameroot%.*}_ffprobe.json"
        mediainfo --language=raw -f --output=XML "$file" > "$fileoutput/${filenameroot%.*}_mediainfo.xml"
        mediainfo --inform="Details;1" "$file" > "$fileoutput/${filenameroot%.*}_mediainfo_trace.txt"
        exiftool -X "$file" > "$fileoutput/${filenameroot%.*}_exiftool.xml"
        exiftool "$file" > "$fileoutput/${filenameroot%.*}_exiftool.txt"
    done < "$FILELIST"
    
    cd "$pwd"
    rm -r -f "$FILELIST"

done
log -e
