#!/bin/bash
# verifypackage, run package through various tests and report on overal status
VERSION="1.0"
unset DEPENDENCIES
DEPENDENCIES=(ffmpeg mediainfo)

SCRIPTDIR=$(dirname "${0}")
. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ;};

_usage(){
    echo
    echo "$(basename ${0}) ${VERSION}"
    echo "This script will test an archival package for validity and status."
    echo "Dependencies: ${DEPENDENCIES[@]}"
    echo "Usage: $(basename ${0}) package1 [ package2 ...]"
    echo "  -h ( display this help )"
    echo
    exit
}
[ "${#}" = 0 ] && _usage
_check_dependencies "${DEPENDENCIES[@]}"

_cleanup(){
    _log -a "Process aborted"
    exit 1
}

trap _cleanup SIGHUP SIGINT SIGTERM

OPTIND=1
while getopts ":ho:n" OPT; do
    case "${OPT}" in
        h) _usage ;;
        *) echo "bad option -${OPTARG}" ; _usage ;;
        :) echo "Option -${OPTARG} requires an argument" ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

while [ "${*}" != "" ] ; do
    PACKAGE="${1}"
    _find_input "${INPUT}"
    MEDIAID=$(basename "${1}" | cut -d. -f1)
    
    FILELIST=$(find "${PACKAGE}" -type f -exec basename "{}" \;)
    DIRLIST=$(find "${PACKAGE}" -type d -exec basename "{}" \;)
    
    #tests to see if all files and directories conform to specified character requirements 
    # file and directory names should only use characters 'a' through 'z', 'A' through 'Z', '0' through '9' and period, plus, hyphen, underscore and score
    # addition the name should not start with plus, hyphen, underscore and score
    # or end with period, plus, hyphen, underscore and score
    FAILDIRSCHAR=`echo "${DIRLIST}" | egrep "^\+\|^\-\|^\_\|^\ \|\.$\|\+$\|\-$\|\_$\|\ $\|[^a-zA-Z0-9.+-_ ]"`
    if [ `echo "${FAILDIRSCHAR}" | wc -w | awk '{print $1}'` -gt 0 ]; then
    echo FAIL - these directories do not meet the file character specifications
    exit 1
    fi
    
    FAILFILESCHAR=`echo "${FILELIST}" | egrep "^\+\|^\-\|^\_\|^\ \|\.$\|\+$\|\-$\|\_$\|\ $\|[^a-zA-Z0-9.+-_ ]"`
    if [ `echo "${FAILFILESCHAR}" | wc -w | awk '{print $1}'` -gt 0 ]; then
    echo FAIL - these files do not meet the file character specifications
    echo failed: "${FAILFILESCHAR}"
    exit 1
    fi
    
    # test for objects and metadata directories
    # test to ensure package directory contains the minimum subdirectories, 'object' and 'metadata'
    FIRSTDIRLIST=$(find "${PACKAGE}" -maxdepth 1 -mindepth 1 -type d -exec basename "{}" \;)
    FOUNDDIRLIST=$(echo "${FIRSTDIRLIST}" | egrep "^objects$|^metadata$")
    if [ $(echo "${FOUNDDIRLIST}" | wc -l | awk '{print $1}') != "3" ]; then
    echo 'FAIL - Did not find the minimal subdirectories: objects and metadata'
    echo FOUNDDIRLIST "${FOUNDDIRLIST}"
    exit 2
    fi

    #Then, there should be two directories: 
    #metadatadir='MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/metadata/' 
    #objectsdir='MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/objects/'

    if [ -d metadata/ ]; then 
        #if metadatadir exists, then look inside of 
        find . -type f \( -name "*.md5" -and -name "*.log" -and -name "*.xml" \)
        #how to count files to make sure there are only three? ls -1 | wc -1 ?    
        #subdocdir='MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/metadata/submissionDocumentation/'
    elif [ ! -d metadata/ ]; then
        #write the package to a log file and say it isnt a complete package, have a way to say what is missing 
                
    FIRSTDIRLIST=$(find "${PACKAGE}/metadata" -maxdepth 1 -mindepth 1 -type d -exec basename "{}" \;)
    FOUNDDIRLIST=$(echo "${FIRSTDIRLIST}" | egrep "^submissionDocumentation$")
    if [ $(echo "${FOUNDDIRLIST}" | wc -l | awk '{print $1}') != "3" ]; then
    echo 'FAIL - Did not find the submissionDocumentation sub directory'
    echo FOUNDDIRLIST "${FOUNDDIRLIST}"
    exit 2
    fi

#if subdocdir exists, then move inside of subdocdir
#there should be two directories
#filemetadir='MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/metadata/submissionDocumentation/fileMeta'
#logsdir='MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/metadata/submissionDocumentation/logs'

    FIRSTDIRLIST=$(find "${PACKAGE}/metadata/submissionDocumentation" -maxdepth 1 -mindepth 1 -type d -exec basename "{}" \;)
    FOUNDDIRLIST=$(echo "${FIRSTDIRLIST}" | egrep "^fileMeta$|^logs$")
    if [ $(echo "${FOUNDDIRLIST}" | wc -l | awk '{print $1}') != "3" ]; then
    echo 'FAIL - Did not find the fileMeta and logs directories'
    echo FOUNDDIRLIST "${FOUNDDIRLIST}"
    exit 2
    fi
    
    if [ -d logs ]; then
        find . -type f \( -name "*.log" -and -name "*.txt" \)
        #in logs directory find 1 .log file and 11 .txt files

    FIRSTDIRLIST=$(find "${PACKAGE}/metadata/submissionDocumentation/fileMeta" -maxdepth 1 -mindepth 1 -type d -exec basename "{}" \;)
    FOUNDDIRLIST=$(echo "${FIRSTDIRLIST}" | egrep "^objects$")
    if [ $(echo "${FOUNDDIRLIST}" | wc -l | awk '{print $1}') != "3" ]; then
    echo 'FAIL - Did not find the objects sub directory'
    echo FOUNDDIRLIST "${FOUNDDIRLIST}"
    exit 2
    fi
    
    if [ -d objects ]; then 
        find . -type f \( -name "*.txt" -and -name "*.json" -and -name "*.xml" \)
        #in objects directory find 3 .xml files, 2 .txt files, 1 .json files
        #how to count files to make sure there are only 6? or that there are right number of each type? ls -1 | wc -1 ?    

    FIRSTDIRLIST=$(find "${PACKAGE}/metadata/submissionDocumentation/fileMeta/objects" -maxdepth 1 -mindepth 1 -type d -exec basename "{}" \;)
    FOUNDDIRLIST=$(echo "${FIRSTDIRLIST}" | egrep "^access$|^service$")
    if [ $(echo "${FOUNDDIRLIST}" | wc -l | awk '{print $1}') != "3" ]; then
    echo 'FAIL - Did not find the access and service sub directories'
    echo FOUNDDIRLIST "${FOUNDDIRLIST}"
    exit 2
    fi

#accessdir=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/metadata/submissionDocumentation/fileMeta/objects/access
#servicedir=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/metadata/submissionDocumentation/fileMeta/objects/service

#dvddir=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/metadata/submissionDocumentation/fileMeta/objects/access/dvd
#mp3dir=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/metadata/submissionDocumentation/fileMeta/objects/access/mp3
#podcastdir
#youtube_updir=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/metadata/submissionDocumentation/fileMeta/objects/access/youtube_up

    FIRSTDIRLIST=$(find "${PACKAGE}/metadata/submissionDocumentation/fileMeta/objects/access" -maxdepth 1 -mindepth 1 -type d -exec basename "{}" \;)
    FOUNDDIRLIST=$(echo "${FIRSTDIRLIST}" | egrep "^dvd$|^mp3$|^podcast$|^youtube_up$")
    if [ $(echo "${FOUNDDIRLIST}" | wc -l | awk '{print $1}') != "3" ]; then
    echo 'FAIL - Did not find dvd, mp3, podcast, and youtube_up sub directories'
    echo FOUNDDIRLIST "${FOUNDDIRLIST}"
    exit 2
    fi
    
    if [ -d dvd/ mp3/ podcast/ youtube_up/]
        find . -type f \( -name "*.txt" -and -name "*.json" -and -name "*.xml" \)
#4 xml, 1 txt, 1 json

#done with metadata directory and subdirectories, now moving into objects directories

    FIRSTDIRLIST=$(find "${PACKAGE}/objects" -maxdepth 1 -mindepth 1 -type d -exec basename "{}" \;)
    FOUNDDIRLIST=$(echo "${FIRSTDIRLIST}" | egrep "^access$|^captions$|^service$")
    if [ $(echo "${FOUNDDIRLIST}" | wc -l | awk '{print $1}') != "3" ]; then
        echo 'FAIL - Did not find access, captions, or service subdirectories'
        echo FOUNDDIRLIST "${FOUNDDIRLIST}"
        exit 2
    fi

    if [ -d objectsdir ]
        find . -type f \( -name "*.mov" -o -name "*.avi" -o -name "*.mkf" \) #any other file formats I'm forgetting?
    #look for a video file and three directories
#accessdir=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/objects/access/
#captionsdir=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/objects/captions/
#servicedir=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/objects/service/

    FIRSTDIRLIST=$(find "${PACKAGE}/objects/access" -maxdepth 1 -mindepth 1 -type d -exec basename "{}" \;)
    FOUNDDIRLIST=$(echo "${FIRSTDIRLIST}" | egrep "^dvd$|^mp3$|^podcast$|^youtube_up$")
    if [ $(echo "${FOUNDDIRLIST}" | wc -l | awk '{print $1}') != "3" ]; then
        echo 'FAIL - Did not find access, captions, or service subdirectories'
        echo FOUNDDIRLIST "${FOUNDDIRLIST}"
        exit 2
    fi
#dvddir2=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/objects/access/dvd/
#imagesdir=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/objects/access/images/
#mp3dir2=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/objects/access/mp3/
#podcastdir2=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/objects/access/podcast/
#youtube_updir2=MEDIA-MDC-2/CUNYTV_MEDIA/acquisitions/MEDIAID/objects/access/youtube_up/

if [ -d dvd ]
    find . -type f \( -name "*.iso" \)
#find 1 .iso file with these specifications
INPUTOPTIONS+=" -y"
INPUTOPTIONS+=(-nostdin)
if [[ "${VIDEOSTREAMCOUNT}" > 0 ]] ; then
    _get_codectagstring "${SOURCEFILE}"
    TIMECODEOVERLAY=""
    if [ "${TCBURN}" = "Y" ] ; then
        _get_timecode_overlay "${SOURCEFILE}"
    fi
    if [[ "${CODEC_TAG_STRING}" == "mjp2" ]] ; then
         INPUTOPTIONS+=(-vcodec libopenjpeg)
    fi
    MIDDLEOPTIONS+=(-r:v ntsc)
    MIDDLEOPTIONS+=(-c:v mpeg2video)
    MIDDLEOPTIONS+=(-c:a ac3)
    MIDDLEOPTIONS+=(-f dvd)
    MIDDLEOPTIONS+=(-bf 2)
    MIDDLEOPTIONS+=(-qscale:v 2)
    MIDDLEOPTIONS+=(-mbd rd)
    MIDDLEOPTIONS+=(-s 720x480)
    MIDDLEOPTIONS+=(-pix_fmt yuv420p)
    MIDDLEOPTIONS+=(-g 18)
    MIDDLEOPTIONS+=(-b:v "${MAXDVDBITRATE}")
    MIDDLEOPTIONS+=(-bt 400k)
    MIDDLEOPTIONS+=(-top 0)
    MIDDLEOPTIONS+=(-flags +ildct+ilme)
    MIDDLEOPTIONS+=(-maxrate "${MAXDVDBITRATE}")
    MIDDLEOPTIONS+=(-minrate 0)
    MIDDLEOPTIONS+=(-bufsize 3600k)
    MIDDLEOPTIONS+=(-packetsize 2048)
    MIDDLEOPTIONS+=(-muxrate 10080000)
    MIDDLEOPTIONS+=(-lmin 1)
    MIDDLEOPTIONS+=(-lmax 200000)
    if  [[ "${WIDTH}" == 720 && "${HEIGHT}" == 486 ]] ; then
        MIDDLEOPTIONS+=(-vf "fieldorder=bff,crop=720:480:0:4,setdar=${ASPECT}${TIMECODEOVERLAY}" -aspect "${ASPECT}")
    elif  [[ "${WIDTH}" == 720 && "${HEIGHT}" == 480 ]] ; then
        MIDDLEOPTIONS+=(-vf "fieldorder=bff,setdar=${ASPECT}${TIMECODEOVERLAY}" -aspect "${ASPECT}")
    elif  [[ "${WIDTH}" == 720 && "${HEIGHT}" == 512 ]] ; then
        MIDDLEOPTIONS+=(-vf "fieldorder=bff,crop=720:480:0:32,setdar=${ASPECT}${TIMECODEOVERLAY}" -aspect "${ASPECT}")
    else
        MIDDLEOPTIONS+=(-vf "fieldorder=bff,scale=720:480:interl=1,setdar=${ASPECT}${TIMECODEOVERLAY}" -aspect "${ASPECT}")
    fi
fi
if [[ "${AUDIOSTREAMCOUNT}" > 0 ]] ; then
    MIDDLEOPTIONS+=(-b:a 448000)
    MIDDLEOPTIONS+=(-ar 48000)
    _get_audio_index "${SOURCEFILE}"
    if [ "${AUDIOMAP}" = "L" ] ; then
        AUDIOMAPPING_FFMPEG=(-map_channel 0.${AUDIO_INDEX_1}.0)
    elif [ "${AUDIOMAP}" = "R" ] ; then
        AUDIOMAPPING_FFMPEG=(-map_channel 0.${AUDIO_INDEX_1}.1)
    else
        _get_audio_mapping "${SOURCEFILE}"
    fi
    MIDDLEOPTIONS+=("${AUDIOMAPPING_FFMPEG[@]}")
fi

if [ -d images ]
find . -type f \( -name "*.tiff" \)
#find 10 of these filetypes

if [ -d mp3 ]
    find . -type f \( -name "*.mp3" \)
find 1 .mp3 file with these specific properties: 
    INPUTOPTIONS+=(-nostdin)
    MIDDLEOPTIONS+=(-map 0:a:0)
    MIDDLEOPTIONS+=(-ac 2)
    MIDDLEOPTIONS+=(-r:a 44100)
    MIDDLEOPTIONS+=(-sample_fmt s16p)
    _get_audio_mapping "${SOURCEFILE}"
    MIDDLEOPTIONS+=("${AUDIOMAPPING_FFMPEG[@]}")

if [ -d podcast ]
find 1 podcast.mov file
    INPUTOPTIONS+=(-nostdin)
    if [[ "${VIDEOSTREAMCOUNT}" > 0 ]] ; then
        if [[ "${CODEC_TAG_STRING}" == "mjp2" ]] ; then
             INPUTOPTIONS+=(-vcodec libopenjpeg)
        fi
        MIDDLEOPTIONS+=(-movflags faststart)
        MIDDLEOPTIONS+=(-pix_fmt yuv420p)
        MIDDLEOPTIONS+=(-c:v libx264)
        MIDDLEOPTIONS+=(-b:v 1500k)
        MIDDLEOPTIONS+=(-maxrate:v 3000k)
        MIDDLEOPTIONS+=(-minrate:v 375k)
        MIDDLEOPTIONS+=(-bufsize:v 6000k)
        MIDDLEOPTIONS+=(-vf "yadif,scale=640:trunc(ow/dar/2)*2:interl=1")
    fi
    if [[ "${AUDIOSTREAMCOUNT}" > 0 ]] ; then
        MIDDLEOPTIONS+=(-c:a aac -strict -2)
        MIDDLEOPTIONS+=(-b:a 96k)
        _get_audio_mapping "${SOURCEFILE}"
        MIDDLEOPTIONS+=("${AUDIOMAPPING_FFMPEG[@]}")

if [ -d youtube_up ]
    find . -type f \( -name "*.mp4" \)
find 1 .mp4 file
    _get_codectagstring "${SOURCEFILE}"
    _get_videostreamcount "${SOURCEFILE}"
    _get_audiostreamcount "${SOURCEFILE}"
    INPUTOPTIONS+=(-vsync 0)
    INPUTOPTIONS+=(-nostdin)
    if [[ "${VIDEOSTREAMCOUNT}" > 0 ]] ; then
        if [[ "${CODEC_TAG_STRING}" == "mjp2" ]] ; then
             INPUTOPTIONS+=(-vcodec libopenjpeg)
        fi
        MIDDLEOPTIONS+=(-movflags faststart)
        MIDDLEOPTIONS+=(-pix_fmt yuv420p)
        MIDDLEOPTIONS+=(-c:v libx264)
        MIDDLEOPTIONS+=(-crf 18)
        if [ "${SECONDS%.*}" -gt "7200" ] ; then
            MIDDLEOPTIONS+=(-maxrate 2190k)
        elif [ "${SECONDS%.*}" -gt "3600" ] ; then
            MIDDLEOPTIONS+=(-maxrate 4380k)
        else
            MIDDLEOPTIONS+=(-maxrate 8760k)
        fi
        MIDDLEOPTIONS+=(-bufsize 1835k)
        if  [[ "${WIDTH}" == 720 && "${HEIGHT}" == 486 ]] ; then
            MIDDLEOPTIONS+=(-vf "crop=720:480:0:4,yadif")
        elif  [[ "${WIDTH}" == 720 && "${HEIGHT}" == 512 ]] ; then
            MIDDLEOPTIONS+=(-vf "crop=720:480:0:32,yadif")
        else
            MIDDLEOPTIONS+=(-vf yadif)
        fi
    fi
    if [[ "${AUDIOSTREAMCOUNT}" > 0 ]] ; then
        MIDDLEOPTIONS+=(-c:a aac -strict -2)
        MIDDLEOPTIONS+=(-ac 2)
        MIDDLEOPTIONS+=(-b:a 128k)
        _get_audio_index "${SOURCEFILE}"
        if [ "${AUDIOMAP}" = "L" ] ; then
            AUDIOMAPPING_FFMPEG=(-map_channel 0.${AUDIO_INDEX_1}.0)
        elif [ "${AUDIOMAP}" = "R" ] ; then
            AUDIOMAPPING_FFMPEG=(-map_channel 0.${AUDIO_INDEX_1}.1)
        else
            _get_audio_mapping "${SOURCEFILE}"
        fi
        MIDDLEOPTIONS+=("${AUDIOMAPPING_FFMPEG[@]}")
    fi
    MIDDLEOPTIONS+=(-f mp4)
    
if [ -d captions ]
    find . -type f \( -name "*.scc" \)

if [ -d service ]
    find . -type f \( -name "*.mov" \)

done