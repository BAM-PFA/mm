#!/bin/bash
# makepodcast
# makes a file appropriate for podcasting
version="1.0"

scriptdir=`dirname "$0"`
. "$scriptdir/variables"
. "$scriptdir/functions"
[ ! -f "$scriptdir/variables" -o ! -f "$scriptdir/functions" ] && { echo "Missing '$scriptdir/variables' and/or '$scriptdir/functions'. Exiting." ; exit 1 ;};

[ "$#" = 0 ] && { ask_input ; once="y" ;};

while [ "$*" != ""  -o "$once" = "y" ] ; do
	once="n"
	[ "$#" != 0 ] && input="$1"
    [ -d "$input" ] && { outputdir="$input/objects/access/podcast" && logdir="$input/metadata/submissionDocumentation/logs" ;};
    [ -f "$input" ] && { outputdir=`dirname "$input"`"/access/podcast" && logdir="`dirname "$input"`/access/logs" ;};
    [ ! "$outputdir" ] && { outputdir="$input/objects/access/podcast" && logdir="$input/metadata/submissionDocumentation/logs" ;};
	find_input "$input"

    filename=`basename "$sourcefile"`
    mediaid=`basename "$input" | cut -d. -f1`

	podcastoutput="$outputdir/${mediaid%.*}_podcast.mov"
    [ -s "$podcastoutput" ] && { report "${RED}WARNING $podcastoutput already exists, skipping transcode${NC}" ; exit 1 ;};
	mkdir -p "$outputdir"
	middleoptions="-movflags faststart -pix_fmt yuv420p -c:v libx264 -b:v 1500k -maxrate:v 3000k -minrate:v 375k -bufsize:v 6000k -vf 'yadif,scale=640:trunc(ow/dar/2)*2:interl=1' -c:a libfaac -b:a 96k "
	if [ "$logdir" != "" ] ; then
		mkdir -p "$logdir"
		export FFREPORT="file=${logdir}/%p_%t_$(basename $0)_${version}.txt"
		inputoptions+=" -report"
	fi
	makepodcastcommand="ffmpeg $inputoptions -i \"$sourcefile\" $middleoptions \"$podcastoutput\""
	report "${GREEN}Running: $makepodcastcommand${NC}"
	eval "$makepodcastcommand"
    shift
done