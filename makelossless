#!/bin/bash
scriptdir=$(dirname "$0")
. "$scriptdir/mmfunctions" || { echo "Missing '$scriptdir/mmfunctions'. Exiting." ; exit 1 ;};

check_dependencies ffmpeg muxmovie mediainfo

cleanup(){
    log -a "Process aborted"
    exit 1
}

trap cleanup SIGHUP SIGINT SIGTERM

while [ "$*" != "" ] ; do
    file="$1"
    filename=$(basename "$file")
    dirname=$(dirname "$file")
    outputdir=""
    
    [ "$#" != 0 ] && input="$1"
    [ -d "$input" ] && { logdir="$input/metadata/submissionDocumentation/logs" && trimmingsdir="$input/objects/trimmed_materials" ;};
    [ -f "$input" ] && { logdir="$(dirname "$input")/lossless/logs" && trimmingsdir="$(dirname "$input")/lossless/trimmed_materials" ;};
    [ ! "$logdir" ] && logdir="$input/metadata/submissionDocumentation/logs"

    find "$input" -type f \( -name "*.mov" -o -name "*.avi" -o -name "*.mxf" \) -print0 | while read -d $'\0' file ; do
        sourcefile="$file"
        outputdir=$(dirname "$sourcefile")
        sourcefilename=$(basename "$sourcefile")
        
        log -b 
        
        get_codectagstring "$sourcefile"
        get_fieldorder "$sourcefile"
        get_pix_fmt "$sourcefile"
        if [ "$codec_tag_string" == "2vuy" ] ; then
            report -dt "$sourcefilename is 2vuy, starting encode"
            mkdir -p "$outputdir" "$logdir" "$trimmingsdir"
            export FFREPORT="file=${logdir}/%p_%t_makelossless.log"
            ffmpeg -v warning -stats -vsync 0 -i "$sourcefile" -map 0:v -map 0:a -c:v ffv1 -level 3 -vf setfield=bff -g 1 -c:a copy "$outputdir/${sourcefilename%.*}_ffv1.mov" -f framemd5 -an "$logdir/${sourcefilename%.*}.framemd5"
            ffmpeg_ffv1_err="$?"
            [ "$ffmpeg_ffv1_err" -gt 0 ] && { echo ffmpeg ended with error ; exit 1 ;};
            ffmpeg -v warning -stats -i "$outputdir/${sourcefilename%.*}_ffv1.mov" -f framemd5 -pix_fmt uyvy422 -an "$logdir/${sourcefilename%.*}_ffv1.framemd5"
            ffmpeg_md5_err="$?"
            [ "$ffmpeg_md5_err" -gt 0 ] && { echo ffmpeg md5 ended with error ; exit 1 ;};
            defaults write com.pair.3am.QTCoffee BugMe NO 
            muxmovie "$sourcefile" -track "Timecode Track" -track "Closed Caption Track" -self-contained -o "$trimmingsdir/${sourcefilename%.*}_tc_c608.mov"
            muxmovie_err="$?"
            [ "$muxmovie_err" -gt 0 ] && { echo muxmovie ended with error ; exit 1 ;};
            if [ $(md5 -q "$logdir/${sourcefilename%.*}.framemd5") = $(md5 -q "$logdir/${sourcefilename%.*}_ffv1.framemd5") ] ; then
                report -dt "Everything looks safe. Going to delete the original."
                mediainfo -f --language=raw --output=XML "$sourcefile" > "$logdir/${sourcefilename%.*}_mediainfo.xml"
                rm -f -v "$sourcefile"
            else
                report -wt "Not looking safe. Going to keep the original."
            fi
        elif [ "$codec_tag_string" == "v210" ] ; then
            report -dt "$sourcefilename is v210, starting encode"
            mkdir -p "$outputdir" "$logdir" "$trimmingsdir"
            export FFREPORT="file=${logdir}/%p_%t_makelossless.log"
            ffmpeg -v warning -stats -vsync 0 -i "$sourcefile" -map 0:v -map 0:a -c:v ffv1 -level 3 -vf setfield=bff -g 1 -c:a copy "$outputdir/${sourcefilename%.*}_ffv1.mov" -f framemd5 -an "$logdir/${sourcefilename%.*}.framemd5"
            ffmpeg_ffv1_err="$?"
            [ "$ffmpeg_ffv1_err" -gt 0 ] && { echo ffmpeg ended with error ; exit 1 ;};
            ffmpeg -v warning -stats -i "$outputdir/${sourcefilename%.*}_ffv1.mov" -f framemd5 -an "$logdir/${sourcefilename%.*}_ffv1.framemd5"
            ffmpeg_md5_err="$?"
            [ "$ffmpeg_md5_err" -gt 0 ] && { echo ffmpeg md5 ended with error ; exit 1 ;};
            defaults write com.pair.3am.QTCoffee BugMe NO 
            muxmovie "$sourcefile" -track "Timecode Track" -track "Closed Caption Track" -self-contained -o "trimmingsdir/${sourcefilename%.*}_tc_c608.mov"
            muxmovie_err="$?"
            [ "$muxmovie_err" -gt 0 ] && { echo muxmovie ended with error ; exit 1 ;};
            if [ $(md5 -q "$logdir/${sourcefilename%.*}.framemd5") = $(md5 -q "$logdir/${sourcefilename%.*}_ffv1.framemd5") ] ; then
                report -dt "Everything looks safe. Going to delete the original."
                mediainfo -f --language=raw --output=XML "$sourcefile" > "$logdir/${sourcefilename%.*}_mediainfo.xml"
                rm -f -v "$sourcefile"
            else
                report -wt "Not looking safe. Going to keep the original."
            fi
        elif [ "$codec_tag_string" == "FFV1" -a "$fieldorder" == "progressive" ] ; then
            if [ "$pixfmt" == "yuv422p" ] ; then
                report -dt "$sourcefilename is yuv422p ffv1 progressive, starting encode"
                mkdir -p "$outputdir" "$logdir"
                export FFREPORT="file=${logdir}/%p_%t_makelossless_bfffix.log"
                ffmpeg -v warning -stats -vsync 0 -i "$sourcefile" -map 0:v -map 0:a -c:v  -level 3 -vf setfield=bff -g 1 -c:a copy "$outputdir/${sourcefilename%.*}_bfffix.mov"
                ffmpeg_ffv1_err="$?"
                [ "$ffmpeg_ffv1_err" -gt 0 ] && { echo ffmpeg ended with error ; exit 1 ;};
                ffmpeg -v warning -stats -i "$outputdir/${sourcefilename%.*}_bfffix.mov" -f framemd5 -pix_fmt uyvy422 -an "$logdir/${sourcefilename%.*}_bfffix.framemd5"
                ffmpeg_md5_err="$?"
                [ "$ffmpeg_md5_err" -gt 0 ] && { echo ffmpeg md5 ended with error ; exit 1 ;};
                if [ $(md5 -q "$logdir/${sourcefilename%.*}.framemd5") = $(md5 -q "$logdir/${sourcefilename%.*}_bfffix.framemd5") ] ; then
                    report -dt "Everything looks safe. Going to delete the original."
                    mediainfo -f --language=raw --output=XML "$sourcefile" > "$logdir/${sourcefilename%.*}_bfffix_mediainfo.xml"
                    mv -f -v "$outputdir/${sourcefilename%.*}_bfffix.mov" "$sourcefile"
                else
                    report -wt "Not looking safe. Going to keep the original."
                fi
            elif [ "$pixfmt" == "yuv422p10le" ] ; then
                report -dt "$sourcefilename is yuv422p10le ffv1 progressive, starting encode"
                mkdir -p "$outputdir" "$logdir"
                export FFREPORT="file=${logdir}/%p_%t_makelossless_bfffix.log"
                ffmpeg -v warning -stats -vsync 0 -i "$sourcefile" -map 0:v -map 0:a -c:v ffv1 -level 3 -vf setfield=bff -g 1 -c:a copy "$outputdir/${sourcefilename%.*}_bfffix.mov"
                ffmpeg_ffv1_err="$?"
                [ "$ffmpeg_ffv1_err" -gt 0 ] && { echo ffmpeg ended with error ; exit 1 ;};
                ffmpeg -v warning -stats -i "$outputdir/${sourcefilename%.*}_bfffix.mov" -f framemd5 -an "$logdir/${sourcefilename%.*}_bfffix.framemd5"
                ffmpeg_md5_err="$?"
                [ "$ffmpeg_md5_err" -gt 0 ] && { echo ffmpeg md5 ended with error ; exit 1 ;};
                if [ $(md5 -q "$logdir/${sourcefilename%.*}.framemd5") = $(md5 -q "$logdir/${sourcefilename%.*}_bfffix.framemd5") ] ; then
                    report -dt "Everything looks safe. Going to delete the original."
                    mediainfo -f --language=raw --output=XML "$sourcefile" > "$logdir/${sourcefilename%.*}_bfffix_mediainfo.xml"
                    mv -f -v "$outputdir/${sourcefilename%.*}_bfffix.mov" "$sourcefile"
                else
                    report -wt "Not looking safe. Going to keep the original."
                fi
            else
                echo uh oh unsupported
            fi
        else
            report -wt "$sourcefilename is not 2vuy or v210 or progress ffv1, quitting"
            continue
        fi
        report -dt done with "$sourcefile"
    done
    shift
done
log -e
