#!/bin/bash
# makeframes

version="1.0"
unset dependencies
dependencies=(ffmpeg)
deliverdir=""
DRYRUN=false

scriptdir=$(dirname "$0")
. "$scriptdir/mmfunctions" || { echo "Missing '$scriptdir/mmfunctions'. Exiting." ; exit 1 ;};

usage(){
    echo
    echo "$(basename $0) ${version}"
    echo "This application will create a series of still images from a video file or package input with the following options."
    echo "Dependencies: ${dependencies[@]}"
    echo "Usage: $(basename $0) [ -d /path/to/deliver/to/ ] fileorpackage1 [ fileorpackage2 ...]"
    echo "  -d directory ( directory to deliver the resulting file to )"
    echo "  -n (dry-run mode, show the commands that would be run but don't do anything)"
    echo "  -h display this help"
    echo
    exit
}
[ "$#" = 0 ] && usage
check_dependencies "${dependencies[@]}"

# local variables
IMAGECOUNT=10

cleanup(){
    log -a "Process aborted"
    exit 1
}
trap cleanup SIGHUP SIGINT SIGTERM

# command-line options to set mediaid and original variables
OPTIND=1
while getopts ":hd:n" opt; do
    case "$opt" in
        n) DRYRUN=true;;
        h) usage;;
        d) 
            deliverdir="$OPTARG"
            [ ! -d "$deliverdir" ] && report -wt "The delivery directory, ${deliverdir}, does not exist. Can not deliver the output of $(basename "$0")."
            ;;
        *) echo "Invalid option: -$OPTARG" ; exit 1 ;;
        :) echo "Option -$OPTARG requires an argument" ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

while [ "$*" != "" ] ; do
    input="$1"
    [ -d "$input" ] && { outputdir="$input/objects/access/images" && logdir="$input/metadata/submissionDocumentation/logs" ;};
    [ -f "$input" ] && { outputdir=$(dirname "$input")"/access/images" && logdir="$(dirname "$input")/access/logs" ;};
    [ ! "$outputdir" ] && { outputdir="$input/objects/access/images" && logdir="$input/metadata/submissionDocumentation/logs" ;};
    find_input "$input" 

    mediaid=$(basename "$1" | cut -d. -f1)

    log -b
    [ -s "$outputdir" ] && { report -wt "WARNING $outputdir already exists, skipping transcode" ; [ "$#" = 1 ] && exit 86 || { shift ; continue ;} ;};
    BASE=$(basename "$sourcefile")
    DURATION=$(ffprobe 2>/dev/null $sourcefile -show_format | grep duration | cut -d= -f2) 
    _run mkdir -p "$outputdir"
    for (( IMAGENUMBER=1; IMAGENUMBER<=$IMAGECOUNT; IMAGENUMBER++)) ; do
        START=$(echo "( $DURATION / ( $IMAGECOUNT + 1 )) * $IMAGENUMBER" | bc)
        report -d "Making frame $IMAGENUMBER of $IMAGECOUNT $outputdir/${BASE%.*}_${IMAGENUMBER}.tiff"
        _run ffmpeg -y -v warning -ss "$START" -i $sourcefile -vf yadif,thumbnail=100 -frames:v 1 "$outputdir/${mediaid}_${IMAGENUMBER}.tiff" 
    done
    echo
    if [ -d "${deliverdir}" ] ; then
        report -dt "Delivering output"
        _run mkdir -p "${deliverdir}/${mediaid}_images/"
        _run cp -av "${outputdir}/" "${deliverdir}/${mediaid}_images/"
    fi
    log -e
    shift
done
log -e
